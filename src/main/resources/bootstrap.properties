##配置以服务化的方式从config server中获取config profile
eureka.client.serviceUrl.defaultZone=http://eurekanode1:1111/eureka/

spring.cloud.config.discovery.enabled=true
spring.cloud.config.discovery.serviceId=config-server
spring.cloud.config.profile=dev
spring.cloud.config.label=dev

##CONFIG PROFILE
spring.application.name=hugui

##spring.cloud.config.profile=dev
##spring.cloud.config.label=dev
##spring.cloud.config.uri=http://localhost:7001

spring.cloud.config.username=hugui
spring.cloud.config.password=32648fcf-7f2e-4eae-9c4e-72ac04aea229

##例子解释：
##http://localhost:7001/hugui/dev/dev
##HTTP://HOST:PORT / APPLICATION_NAME / PROFILE_NAME / BRANCH_NAME
##HTTP://HOST:PORT / {application}    / {profile}    / {label}

##配置对config server的快速响应和重试
spring.cloud.config.failFast=true


##加入actuator包之后可实现动态刷新配置文件
##1. update config repo git file
##2. execute http://localhost:7001/refresh
##3. get the profile again